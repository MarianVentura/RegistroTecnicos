@page "/Cotizaciones/Edit/{CotizacionId:int}"
@inject CotizacionesServices cotizacionesServices
@inject CotizacionesDetalleServices cotizacionesDetalleServices
@inject ClientesServices clienteServices
@inject ArticuloServices articuloServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Edit Cotización</PageTitle>
<EditForm Model="Cotizacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header">
                <div class="text-center">
                    <h3><strong>Editar Cotización</strong></h3>
                </div>
            </div>
            @*Body*@
            <div class="card-body">
                @*CotizacionId*@
                <div class="col-3 mt-3">
                    <label class="form-label"><strong>CotizacionId</strong></label>
                    <div class="id-input">
                        <InputNumber class="form-control" readonly @bind-Value="Cotizacion.CotizacionId"></InputNumber>
                    </div>
                </div>
                @*Fecha*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Cotizacion.Fecha"></InputDate>
                </div>
                @*Cliente*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Cliente</strong></label>
                    <InputSelect class="form-select" @bind-Value="Cotizacion.ClienteId">
                        <option value="0" selected disabled>Seleccione un cliente</option>
                        @foreach (var cliente in ListarCliente)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                </div>
                @*Observacion*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Observación</strong></label>
                    <InputText class="form-control" @bind-Value="Cotizacion.Observacion"></InputText>
                    <ValidationMessage For="() => Cotizacion.Observacion" />
                </div>
                @*Monto*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Cotizacion.Monto"></InputNumber>
                    <ValidationMessage For="() => Cotizacion.Monto" />
                </div>
                @*Detalle de Cotizaciones*@
                <div class="border border-success p-3 mt-3">
                    <div class="mt-2">
                        <h5>Detalle de Cotizaciones</h5>
                    </div>
                    @*Select Artículo*@
                    <div class="col-auto input-group align-items-center">
                        <InputSelect class="form-select" @bind-Value="Seleccionado">
                            <option value="0" selected disabled>Seleccione un Artículo</option>
                            @foreach (var articulo in ListarArticulos)
                            {
                                <option value="@articulo.ArticuloId">@articulo.ArticuloId. @articulo.Descripcion (@articulo.Precio)</option>
                            }
                        </InputSelect>
                        @*Cantidad*@
                        <label class="col-form-label input-group-text">Cantidad:</label>
                        <InputNumber class="form-control" @bind-Value="CotizacionDetalle.Cantidad"></InputNumber>
                        @*Precio*@
                        <label class="col-form-label input-group-text">Precio:</label>
                        <InputNumber class="form-control" id="quantity-input" readonly @bind-Value="CotizacionDetalle.Precio" />
                        @*Agregar*@
                        <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="Agregar">Agregar</button>
                    </div>
                    @*Tabla de Detalles*@
                    <table class="table table-bordered mt-3">
                        <thead>
                            <tr>
                                <th>ArtículoId</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detalle in ListarCotizacionDetalle)
                            {
                                <tr>
                                    <td>@detalle.ArticuloId</td>
                                    <td>@detalle.Cantidad</td>
                                    <td>@detalle.Precio.ToString("C")</td>
                                    <td>
                                        <button @onclick="@(() => Remover(detalle))" class="btn btn-danger bi bi-trash" type="button">Remover</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @*Footer*@
            <div class="card-footer">
                <button type="button" class="btn btn-secondary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>
        @Mensaje
    </div>
</EditForm>

@code {
    [Parameter]
    public int CotizacionId { get; set; }
    public Cotizaciones Cotizacion { get; set; } = new Cotizaciones();
    public CotizacionesDetalle CotizacionDetalle { get; set; } = new CotizacionesDetalle();
    public List<Cotizaciones> ListarCotizacion { get; set; } = new List<Cotizaciones>();
    public List<Clientes> ListarCliente { get; set; } = new List<Clientes>();
    public List<Articulos> ListarArticulos { get; set; } = new List<Articulos>();
    public List<CotizacionesDetalle> ListarCotizacionDetalle { get; set; } = new List<CotizacionesDetalle>();
    public int Seleccionado { get; set; }
    public string Mensaje = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Cotizacion = await cotizacionesServices.Buscar(CotizacionId);
        ListarCliente = await clienteServices.Listar(c => true);
        ListarArticulos = await articuloServices.ListaArticulos();
        ListarCotizacionDetalle = await cotizacionesDetalleServices.Listar(d => d.CotizacionId == CotizacionId);
    }

    public async Task Guardar()
    {
        var actualizar = await cotizacionesServices.Guardar(Cotizacion);
        if (actualizar)
        {
            Mensaje = "Se ha guardado correctamente.";
            // Redirigir o actualizar la lista después de guardar
            //navigationManager.NavigateTo("Cotizaciones/Index");
        }
        else
        {
            Mensaje = "No se pudo guardar la cotización.";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("Cotizaciones/Index");
    }

    public void Agregar()
    {
        var seleccionado = ListarArticulos.FirstOrDefault(a => a.ArticuloId == Seleccionado);
        if (seleccionado != null && CotizacionDetalle.Cantidad > 0)
        {
            CotizacionDetalle.Precio = seleccionado.Precio;

            var nuevoDetalle = new CotizacionesDetalle
                {
                    ArticuloId = seleccionado.ArticuloId,
                    Cantidad = CotizacionDetalle.Cantidad,
                    Precio = seleccionado.Precio
                };

            Cotizacion.Monto += nuevoDetalle.Cantidad * nuevoDetalle.Precio;

            ListarCotizacionDetalle.Add(nuevoDetalle);
            CotizacionDetalle = new CotizacionesDetalle();
            Seleccionado = 0;
        }
    }

    public void Remover(CotizacionesDetalle eliminarDetalle)
    {
        ListarCotizacionDetalle.Remove(eliminarDetalle);
        Cotizacion.Monto -= eliminarDetalle.Cantidad * eliminarDetalle.Precio;
        Seleccionado = eliminarDetalle.ArticuloId;
        CotizacionDetalle.Cantidad = eliminarDetalle.Cantidad;
        CotizacionDetalle.Precio = eliminarDetalle.Precio;
    }
}
