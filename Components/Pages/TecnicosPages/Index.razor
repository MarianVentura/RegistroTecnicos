@page "/Tecnico/index"
@inject TecnicoServices tecnicoServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consulta Técnicos</PageTitle>

<EditForm Model="ListaTecnicos" class="border shadow-lg p-3 rounded">
    <div class="card-header text-white text-center py-2 square" style="background-color: black;">
        <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Consulta de Técnicos</h3>
    </div>

    <div class="row mb-3 align-items-end">
        <div class="col-md-3">
            <label for="Filtro" class="form-label"></label>
            <select @bind="filtro" class="form-select">
                <option value="" disabled selected>Filtrar por:</option>
                <option value="id">ID</option>
                <option value="nombre">Nombre</option>
            </select>
        </div>
        <div class="col-md-6">
            <label for="ValorFiltro" class="form-label"></label>
            <div class="input-group">
                <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-outline-secondary" type="button">
                    <span class="bi bi-search"></span> 
                </button>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="end">
            <div class="col-md-9"></div>
            <div class="col-md-3 text-center">
                <a href="/Tecnico/create" class="btn btn-info" type="button">
                    <i class="bi bi-pencil-square"></i>
                    Crear
                </a>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered text-center">
            <thead style="background-color: black; color: white;">
                <tr>
                    <th>TécnicoId</th>
                    <th>Nombre</th>
                    <th>SueldoHora</th>
                    <th>Ver</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var t in ListaTecnicos)
                {
                    <tr>
                        <td>@t.TecnicoId</td>
                        <td>@t.Nombre</td>
                        <td>@t.SueldoHora</td>
                        <td>
                            <a class="btn btn-warning" href="/Tecnico/Details/@t.TecnicoId">
                                <span class="bi bi-eye-fill"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-success" href="/Tecnico/Edit/@t.TecnicoId">
                                <span class="bi bi-pencil-square"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-danger" href="/Tecnico/Delete/@t.TecnicoId">
                                <span class="bi bi-trash"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer text-start">
        <p style="font-weight: bold;">Total de Técnicos: @ListaTecnicos.Count</p>
    </div>
</EditForm>

@code {
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    private string filtro = "id";
    private string valorFiltro;

    protected override async Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicoServices.Listar(c => c.TecnicoId > 0);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int TecnicoId))
            {
                ListaTecnicos = await tecnicoServices.Listar(t => t.TecnicoId == TecnicoId);
            }
            else if (filtro == "nombre")
            {
                ListaTecnicos = await tecnicoServices.Listar(t => t.Nombre.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
            }
        }
        else
        {
            ListaTecnicos = await tecnicoServices.Listar(p => true);
        }
    }

    private void IrADetalles(int TecnicoId)
    {
        navigationManager.NavigateTo($"/Tecnico/Details/{TecnicoId:int}");
    }

    private void IrAEditar(int TecnicoId)
    {
        navigationManager.NavigateTo($"/Tecnico/Edit/{TecnicoId:int}");
    }
    private void IrEliminar(int TecnicoId)
    {
        navigationManager.NavigateTo($"/Tecnico/Delete/{TecnicoId:int}");
    }
}