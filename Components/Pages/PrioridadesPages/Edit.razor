@page "/Prioridades/Edit"
@page "/Prioridades/Edit/{PrioridadId:int}"
@inject PrioridadesServices prioridadesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="prioridad" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3><i class="fas fa-edit"></i> Modificar Prioridad</h3>
        </div>

        <div class="card-body">
            @* PrioridadId *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="PrioridadId" class="form-label">ID de Prioridad:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="prioridad.PrioridadId" class="form-control" readonly />
                        </div>
                        <ValidationMessage For="@(() => prioridad.PrioridadId)" />
                    </div>
                </div>
            </div>

            @* Descripción *@
            <div class="mb-3">
                <label for="Descripcion" class="form-label">Descripción:</label>
                <InputText @bind-Value="prioridad.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => prioridad.Descripcion)" />
            </div>

            @* Tiempo de Prioridad en minutos *@
            <div class="mb-3">
                <label for="Tiempo" class="form-label">Tiempo en minutos</label>
                <InputNumber @bind-Value="tiempoEnMinutos" class="form-control" />
                <ValidationMessage For="@(() => tiempoEnMinutos)" />
            </div>
        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="submit" class="btn btn-success"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar"><span class="bi bi-trash-fill"></span> Eliminar </button>
                <button type="button" class="btn btn-primary" @onclick="Volver"><span class="bi bi-arrow-left-square-fill"></span> Volver </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades prioridad { get; set; } = new Prioridades();
    private int tiempoEnMinutos;


    protected override async Task OnInitializedAsync()
    {
        if (PrioridadId != 0)
        {
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var prioridadEncontrada = await prioridadesServices.Buscar(PrioridadId);
        if (prioridadEncontrada != null)
        {
            prioridad = prioridadEncontrada;
        }
    }

    public async Task Modificar()
    {
        await prioridadesServices.Guardar(prioridad);
        navigationManager.NavigateTo("/Prioridades/Index");
    }

    public async Task Eliminar()
    {
        await prioridadesServices.Eliminar(PrioridadId);
        navigationManager.NavigateTo("/Prioridades/Index");
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Prioridades/Index");
    }
}
