@page "/Tecnicos/TiposTecnicos/Details"
@page "/Tecnicos/TiposTecnicos/Details/{TiposTecnicosId:int}"
@inject TiposTecnicosServices tiposTecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles del Tipo de Técnico</PageTitle>

@if (tiposTecnicos != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-white text-center py-2 rounded">
                <h3 class="text-center"><strong>Detalles del Tipo de Técnico</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TiposTecnicosId:</strong> @tiposTecnicos.TiposTecnicosId</li>
                                <li><strong>Descripción:</strong> @tiposTecnicos.Descripcion</li>
                                <li><strong>Activo:</strong> (@tiposTecnicos.Activo ? "Sí" : "No)"</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-arrow-left-square-fill"></i> Volver</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Tipo de técnico no encontrado.</p>
}

@code {
    [Parameter]
    public int TiposTecnicosId { get; set; }
    public TiposTecnicos? tiposTecnicos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        tiposTecnicos = await tiposTecnicosServices.Buscar(TiposTecnicosId);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/TiposTecnicos/Index");
    }

}
