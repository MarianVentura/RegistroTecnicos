@page "/Tecnicos/TiposTecnicos/Edit"
@page "/Tecnicos/TiposTecnicos/Edit/{TiposTecnicosId:int}"
@inject TiposTecnicosServices tiposTecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="tiposTecnicos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3> <i class="fas fa-clipboard-list"></i> Modificar Tipo de Técnico</h3>
        </div>

        <div class="card-body">
            @*TiposTecnicosId*@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="TiposTecnicosId" class="form-label">Tipo de T&eacute;cnico:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="tiposTecnicos.TiposTecnicosId" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" />
                        </div>
                        <ValidationMessage For="@(() => tiposTecnicos.TiposTecnicosId)" />
                    </div>
                </div>
            </div>

            @*Descripción*@
            <div class="mb-3">
                <label for="Descripcion" class="form-label">Descripción:</label>
                <InputText @bind-Value="tiposTecnicos.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => tiposTecnicos.Descripcion)" />
                @if (Existe)
                {
                    <p class="text-danger">Ya existe un tipo de técnico con esta descripción.</p>
                }
            </div>

           @*Activo*@
           <label>Activo:</label>
           <InputCheckbox @BindAttributes-Value="tiposTecnicos.Activo" class="form-control" />
           <ValidationMessage For="@(() => tiposTecnicos.Activo)" />
    </div>

    <div class="card-footer bg-light d-flex justify-content-center mt-3">
        <div class="btn-group">
            <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
            <button type="button" class="btn btn-outline-danger" @onclick="Eliminar"><span class="bi bi-trash-fill"></span> Eliminar </button>
            <button type="button" class="btn btn-outline-primary" @onclick"Volver"><span class="bi bi-arrow-left-square-fill"></span> Volver </button>
        </div>
    </div>
  </div>
</EditForm>

@code {
    [Parameter]
    public int TiposTecnicosId { get; set; }
    public TiposTecnicos tiposTecnicos { get; set; } = new TiposTecnicos();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if(TiposTecnicosId != 0)
        {
            await Buscar();
        }
    }

    public void Nuevo()
    {
        tiposTecnicos = new TiposTecnicos();
        Existe = false;
    }

    public async Task Buscar()
    {
        Existe = false;
        var tiposTecnicosEncontrado = await tiposTecnicosServices.Buscar(TiposTecnicosId);

        if (tiposTecnicosEncontrado != null)
        {
            tiposTecnicos = tiposTecnicosEncontrado;
        }
        else
        {
            Nuevo();
        }
    }

    public async Task Guardar()
    {
        if (await Validar())
        {
            return;
        }

        var guardo = await tiposTecnicosServices.Guardar(tiposTecnicos);
        if (guardo)
        {
            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        var eliminado = await tiposTecnicosServices.Eliminar(tiposTecnicos.TiposTecnicosId);
        Nuevo();
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/TiposTecnicos/Index");
    }

    public async Task<bool> Validar()
    {
        var listaTiposTecnicos = await tiposTecnicosServices.Listar(t => t.Descripcion.ToLower() == tiposTecnicos.Descripcion.ToLower() && t.TiposTecnicosId != tiposTecnicos.TiposTecnicosId);
        Existe = listaTiposTecnicos.Any();
        return Existe;
    }
}
