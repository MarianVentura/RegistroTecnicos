@page "/Clientes/Edit"
@page "/Clientes/Edit/{ClienteId:int}"
@inject ClientesServices clientesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header bg-primary text-white text-center py-2 rounded">
            <h3> <i class="fas fa-user-edit"></i> Modificar Cliente</h3>
        </div>

        <div class="card-body">
            @*ClienteId*@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="ClienteId" class="form-label">ID de Cliente:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="cliente.ClienteId" class="form-control" readonly />
                        </div>
                        <ValidationMessage For="@(() => cliente.ClienteId)" />
                    </div>
                </div>
            </div>

            @*Nombres*@
            <div class="mb-3">
                <label for="Nombres" class="form-label">Nombres:</label>
                <InputText @bind-Value="cliente.Nombres" class="form-control" />
                <ValidationMessage For="@(() => cliente.Nombres)" />
            </div>

            @*WhatsApp*@
            <div class="mb-3">
                <label for="WhatsApp" class="form-label">WhatsApp:</label>
                <InputText @bind-Value="cliente.WhatsApp" class="form-control" />
                <ValidationMessage For="@(() => cliente.WhatsApp)" />
            </div>
        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="submit" class="btn btn-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar"><span class="bi bi-trash-fill"></span> Eliminar </button>
                <button type="button" class="btn btn-primary" @onclick="Volver"><span class="bi bi-arrow-left-square-fill"></span> Volver </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes cliente { get; set; } = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        if (ClienteId != 0)
        {
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var clienteEncontrado = await clientesServices.Buscar(ClienteId);
        if (clienteEncontrado != null)
        {
            cliente = clienteEncontrado;
        }
        else
        {
            cliente = new Clientes();
        }
    }

    public async Task Guardar()
    {
        var guardo = await clientesServices.Guardar(cliente);
        if (guardo)
        {
            navigationManager.NavigateTo("/Clientes/Index");
        }
    }

    public async Task Eliminar()
    {
        var eliminado = await clientesServices.Eliminar(ClienteId);
        navigationManager.NavigateTo("/Clientes/Index");
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Clientes/Index");
    }
}
